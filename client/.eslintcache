[{"C:\\Users\\16197\\bookSearchEngine\\client\\src\\index.js":"1","C:\\Users\\16197\\bookSearchEngine\\client\\src\\App.js":"2","C:\\Users\\16197\\bookSearchEngine\\client\\src\\pages\\SearchBooks.js":"3","C:\\Users\\16197\\bookSearchEngine\\client\\src\\pages\\SavedBooks.js":"4","C:\\Users\\16197\\bookSearchEngine\\client\\src\\components\\Navbar.js":"5","C:\\Users\\16197\\bookSearchEngine\\client\\src\\components\\LoginForm.js":"6","C:\\Users\\16197\\bookSearchEngine\\client\\src\\components\\SignupForm.js":"7","C:\\Users\\16197\\bookSearchEngine\\client\\src\\utils\\auth.js":"8","C:\\Users\\16197\\bookSearchEngine\\client\\src\\utils\\queries.js":"9","C:\\Users\\16197\\bookSearchEngine\\client\\src\\utils\\API.js":"10","C:\\Users\\16197\\bookSearchEngine\\client\\src\\utils\\localStorage.js":"11","C:\\Users\\16197\\bookSearchEngine\\client\\src\\utils\\mutations.js":"12"},{"size":266,"mtime":1668285896000,"results":"13","hashOfConfig":"14"},{"size":1288,"mtime":1669841871765,"results":"15","hashOfConfig":"14"},{"size":4981,"mtime":1669874146441,"results":"16","hashOfConfig":"14"},{"size":2771,"mtime":1669874151339,"results":"17","hashOfConfig":"14"},{"size":2524,"mtime":1668285896000,"results":"18","hashOfConfig":"14"},{"size":2743,"mtime":1669848244560,"results":"19","hashOfConfig":"14"},{"size":3566,"mtime":1668623376865,"results":"20","hashOfConfig":"14"},{"size":1234,"mtime":1668285896000,"results":"21","hashOfConfig":"14"},{"size":382,"mtime":1669855569706,"results":"22","hashOfConfig":"14"},{"size":1392,"mtime":1668285896000,"results":"23","hashOfConfig":"14"},{"size":793,"mtime":1668285896000,"results":"24","hashOfConfig":"14"},{"size":1145,"mtime":1669854916040,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"kewvrh",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\16197\\bookSearchEngine\\client\\src\\index.js",[],["53","54"],"C:\\Users\\16197\\bookSearchEngine\\client\\src\\App.js",[],"C:\\Users\\16197\\bookSearchEngine\\client\\src\\pages\\SearchBooks.js",["55","56","57"],"C:\\Users\\16197\\bookSearchEngine\\client\\src\\pages\\SavedBooks.js",["58","59"],"C:\\Users\\16197\\bookSearchEngine\\client\\src\\components\\Navbar.js",[],"C:\\Users\\16197\\bookSearchEngine\\client\\src\\components\\LoginForm.js",["60","61","62"],"// see SignupForm.js for comments\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n  const [loginUser, { error, data }] = useMutation(LOGIN_USER);\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [validated, setValidated] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await loginUser({\n        variables: { ...userFormData },\n      });\n\n      Auth.login(data.loginUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","C:\\Users\\16197\\bookSearchEngine\\client\\src\\components\\SignupForm.js",["63","64"],"import React, { useState } from \"react\";\n\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [createUser, { error, data }] = useMutation(CREATE_USER);\n\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await createUser({ variables: { ...userFormData } });\n\n      if (!data) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      Auth.login(data.createUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your username\"\n            name=\"username\"\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Username is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Your email address\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={\n            !(\n              userFormData.username &&\n              userFormData.email &&\n              userFormData.password\n            )\n          }\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","C:\\Users\\16197\\bookSearchEngine\\client\\src\\utils\\auth.js",[],"C:\\Users\\16197\\bookSearchEngine\\client\\src\\utils\\queries.js",[],"C:\\Users\\16197\\bookSearchEngine\\client\\src\\utils\\API.js",[],"C:\\Users\\16197\\bookSearchEngine\\client\\src\\utils\\localStorage.js",[],"C:\\Users\\16197\\bookSearchEngine\\client\\src\\utils\\mutations.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":23,"nodeType":"71","messageId":"72","endLine":2,"endColumn":31},{"ruleId":"69","severity":1,"message":"73","line":33,"column":22,"nodeType":"71","messageId":"72","endLine":33,"endColumn":27},{"ruleId":"69","severity":1,"message":"74","line":79,"column":15,"nodeType":"71","messageId":"72","endLine":79,"endColumn":19},{"ruleId":"69","severity":1,"message":"75","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"76","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"73","line":10,"column":23,"nodeType":"71","messageId":"72","endLine":10,"endColumn":28},{"ruleId":"69","severity":1,"message":"74","line":10,"column":30,"nodeType":"71","messageId":"72","endLine":10,"endColumn":34},{"ruleId":"69","severity":1,"message":"77","line":13,"column":21,"nodeType":"71","messageId":"72","endLine":13,"endColumn":33},{"ruleId":"69","severity":1,"message":"73","line":15,"column":24,"nodeType":"71","messageId":"72","endLine":15,"endColumn":29},{"ruleId":"69","severity":1,"message":"74","line":15,"column":31,"nodeType":"71","messageId":"72","endLine":15,"endColumn":35},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'data' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'setValidated' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]